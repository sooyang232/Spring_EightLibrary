<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
<!-- @Autowired 사용을 위해 -->
    <context:annotation-config/> 
 
 <!-- 요청클래스를 등록 -->
    <bean class="com.qna.dao.QnaDaoImpl" />
    <bean class="com.qna.controller.ListController" />
    <!--
    <bean class="com.board.controller.WriterController" />
    <bean class="com.board.controller.DetailController" />
    <bean class="com.board.controller.UpdateController" />
	<bean class="com.board.controller.DeleteController" />
    DetailController -> return new ModelAndView("downloadView","downloadFile",downloadFile);
    <bean id="downloadView" class="com.board.view.DownloadView" /> -->
    
    <!-- tiles (ViewResolver)설정 -->
    <bean id="tilesConfigurer" 
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles-def/tilesdef.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="viewResolver" 
     class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
         value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="order" value="1"/>
    </bean>
    
    <!-- 리소스 불러오기 
    		리소스번들파일 -> 웹상에서 필요로하는 문자열이나 유효성검사에 관련된 부분을 불러올 수 있도록 설계된 파일
				messages(패키지명).label(불러올파일명)~.properties가 생략
    -->
    <!-- <bean id="messageSource"
    			class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>messages.label</value>
    			<value>messages.validation</value>
    		</list>
    	</property>
    </bean> -->
    
    <!-- 예외페이지 작성(문제가 발생->예외페이지를 만들어서 호출이 가능) 
	    public void setExceptionMappings(Properties mappings) {
			this.exceptionMappings = mappings;
		}
		SimpleMappingExceptionResolver=>웹상에서 에러가 발생->개발자가 작성한 예외처리 페이지를 보여주게
														설정이 가능한 클래스
				<prop key="java.lang.Exception">pageError</prop>
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    	<property name="exceptionMappings">
    		<props>
    			<prop key="java.lang.Exception">pageError</prop>
    		</props>
    	</property>
    </bean>
    
    <!-- 파일 다운로드 뷰를 위한 전용 viewResolver를 빈즈로 등록 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" 
    		p:order="0" />
    
    
    <!-- 파일업로드 52428800byte => 50MB => 51200kb
    	CommonsMultipartResolver -> 업로드를 해주는 클래스
    		maxUploadSize(최대 업로드 크기 지정)
    		defaultEncoding(한글 처리 부분 설정)
    		
    -->
    <bean id="multipartResolver"
    		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    		<property name="maxUploadSize" value="52428800"/>
    		<property name="defaultEncoding" value="utf-8" />
    </bean>
   
</beans>





























